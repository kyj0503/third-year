plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.1'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.webProject'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

bootJar {
    archiveFileName = 'app.jar' // 빌드 후 JAR 파일 이름 설정
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot Starter
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // Spring Boot JPA (Database Access)
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // H2 Database (Development/Test Environment)
    runtimeOnly 'com.h2database:h2'

    // Spring Boot Security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // Lombok (Code Simplification)
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Validation (for @Valid and @Validated annotations)
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    testImplementation 'org.mockito:mockito-core'

    // Spring Boot DevTools (Hot Reload)
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // Jackson (JSON Processing, included in spring-boot-starter-web)
    implementation 'com.fasterxml.jackson.core:jackson-databind'

    implementation 'com.squareup.okhttp3:okhttp:4.10.0'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
    implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'

    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
}

// Ensure the test task uses JUnit Platform
tasks.named('test') {
    useJUnitPlatform()
}

// Task to verify JAR file exists after build
tasks.register('verifyJar') {
    dependsOn bootJar
    doLast {
        def jarFile = file("${buildDir}/libs/app.jar")
        if (!jarFile.exists()) {
            throw new GradleException("JAR file not found at ${jarFile.absolutePath}")
        }
    }
}

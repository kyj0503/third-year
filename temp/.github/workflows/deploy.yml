name: Test and Deploy to Cloud Run

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v3

      # 환경 변수 설정 및 GCS 키 파일 생성
      - name: Set up environment variables and Create JSON key file
        run: |
          echo "Setting up GCS_KEY_FILE"
          echo "${{ secrets.GCS_KEY_FILE }}" > gcs-key.json
        env:
          GCS_KEY_FILE: ${{ secrets.GCS_KEY_FILE }}

      # Google Cloud 인증
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      # Google Cloud SDK 설정
      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      # Gradle 빌드
      - name: Build with Gradle
        run: ./gradlew clean build -x test
        env:
          GCS_KEY_FILE: ${{ secrets.GCS_KEY_FILE }}

      # 빌드 컨텍스트 준비
      - name: Prepare build context
        run: cp build/libs/chonstay_backend-0.0.1-SNAPSHOT.jar ./app.jar

      # Docker 인증
      - name: Authenticate Docker to Artifact Registry
        run: gcloud auth configure-docker asia.gcr.io

      # Docker 이미지 빌드 및 푸시
      - name: Build and Push Docker Image
        run: |
          IMAGE_NAME=asia.gcr.io/${{ secrets.GCP_PROJECT_ID }}/my-app
          docker build -t $IMAGE_NAME .
          docker push $IMAGE_NAME

      # Cloud Run 배포
      - name: Deploy to Cloud Run
        run: |
          IMAGE_NAME=asia.gcr.io/${{ secrets.GCP_PROJECT_ID }}/my-app
          gcloud run deploy my-app \
            --image $IMAGE_NAME \
            --region ${{ secrets.GCP_REGION }} \
            --platform managed \
            --allow-unauthenticated \
            --update-env-vars GCS_KEY_FILE=gcs-key.json
